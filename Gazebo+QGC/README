### 초기 코드 구상

- **charging_station**: 2차원 리스트 튜플  
  &downarrow;  
- **GPS 지구 모형 반영 최단거리 계산 함수** (하버사인 공식 사용)  
- **최단 경로 노드 계산 함수**  
- **비상착륙 함수**  
- **배터리 모니터 함수**  
- **엔진 고장 함수**  
- **통신 에러 함수**  
- **바람 모니터 함수**  
  &downarrow;  
- **메인 함수** `async def run()`  
  - 이륙 명령  
  - 엔진 태스크 생성  
  - 통신 태스크 생성  
  - 배터리 태스크 생성  
  - 바람 태스크 생성  
  - `if` 조건문 오류 발생 시 최단 경로로 이동 명령  
  - 착륙 명령  
  &downarrow;

```python
if __name__ == "__main__":
    asyncio.run(run())

  ###구현 중간 상황
charging_station 2차원 리스트 튜플
&downarrow;
드론오류 상태




 ##리눅스 터미널 실행 명령어
cd /home/ayeong/catkin_ws/PX4-Autopilot
[gazebo start lat,long fix command]
echo "export PX4_HOME_LAT=35.1545288" >> ~/.bashrc
echo "export PX4_HOME_LON=128.0933887" >> ~/.bashrc
echo "export PX4_HOME_ALT=30" >> ~/.bashrc
cd /home/ayeong/catkin_ws/PX4-Autopilot
make px4_sitl gazebo

/home/ayeong/QgroundControl.AppImage


[lat,log choose&twice faster]
export PX4_HOME_LAT=35.1545288
export PX4_HOME_LON=128.0933887
export PX4_HOME_ALT=30
export PX_SIM_SPEED_FACTOR=2
